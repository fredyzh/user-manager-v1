syntax = "proto3";

package token.v1.service;
option go_package = "github.com/fredyzh/user_manager/api/token/v1/service";

import "api/token/v1/pb/code.proto";
import "api/token/v1/pb/token.proto";
import "api/token/v1/pb/secrets.proto";
import "google/api/annotations.proto";
import "api/meta/v1/pb/meta.proto";
import "google/protobuf/Empty.proto";

// Token
service Token {
    //Token
    rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenReply){
        option (google.api.http) = {
            post: "/jwt/v1/service/validatetoken"
            body: "*"
        };
    };
    //
    rpc VerifyCode(VerifyCodeRequest) returns(token.v1.pb.Code);

    rpc TokenHealth(google.protobuf.Empty) returns (TokenHealthReply) {
        option (google.api.http) = {
            get: "/jwt/v1/service/health"
        };
    }

    //
    rpc RegisterJWTSecret(RegisterJWTSecretRequest) returns(RegisterJWTSecretReply){
        option (google.api.http) = {
            post: "/jwt/v1/service/registerjwtsecret"
            body: "*"
        };
    };

    rpc IssueJWTToken(IssueTokenRequest) returns(IssueTokenReply){
        option (google.api.http) = {
            post: "/jwt/v1/service/issuetokenrequest"
            body: "*"
        };
    };

    rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenReply){
        option (google.api.http) = {
            post: "/jwt/v1/service/refreshtoken"
            body: "*"
        };
    };
}

message ValidateTokenRequest {
    // 
    string access_token = 1;
    //
    string jwtkey=2;
}

message ValidateTokenReply{

    bool isValid=1;

    string invalid_reason=2;
}

message RefreshTokenRequest {
    // 
    string access_token = 1;
    // 
    string refresh_token = 2;
    //
    string jwtkey=3;
}

message RefreshTokenReply {
    // 
    string access_token = 1;
    // 
    string refresh_token = 2;
    //
    bool Ok=3;
    //
    string failure_reason=4;
}



// IssueCodeResponse todo
message IssueCodeResponse {
    // 
    string message = 1;
}

// 
message VerifyCodeRequest {
    // 
    string username = 1;
    // 
    string code = 2;
}

message IssueTokenRequest {
    //
    string username = 1;
    // 
    string password = 2;

    //
    string jwtkey=3;

    //
    meta.v1.pb.Scope scope=4;
}

message IssueTokenReply {

    string id =1;

    string access_token = 2;

    string refresh_token = 3;
}

message IssueCodeRequest {
    // 
    bool dry_run = 1;
    // 
    token.v1.pb.GRANT_TYPE grant_type = 2;
    // 
    int64 expired_at = 3;
    // 
    string username = 4;
    //
    string password = 5;
    //
    string access_token = 6;
    //
    string auth_code = 7;
    // 
    string state = 8;
}

message RegisterJWTSecretRequest{

    string userId=1;
    //
    string username=2;
    //
    string password=3;
    //
    meta.v1.pb.Scope scope=4;
    //
    token.v1.pb.JWTSecrets jwt=5;
}

message RegisterJWTSecretReply{
    string id = 1;
}

message TokenHealthReply {
    bool ok = 1;
}